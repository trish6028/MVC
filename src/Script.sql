DROP DATABASE IF EXISTS ANIMALCLINIC;
CREATE DATABASE IF NOT EXISTS ANIMALCLINIC;
SHOW DATABASES;
USE  ANIMALCLINIC;

DROP TABLE IF EXISTS PetOwner;
CREATE TABLE IF NOT EXISTS PetOwner(
    PetOwnerId VARCHAR(7),
    OwnerName VARCHAR(10) NOT NULL DEFAULT 'Unknown',
    Contact VARCHAR(11),
    CONSTRAINT PRIMARY KEY (PetOwnerId)
    );
SHOW TABLES ;
DESCRIBE PetOwner;


DROP TABLE IF EXISTS PetType;
CREATE TABLE IF NOT EXISTS PetType(
PetTypeId integer NOT NULL auto_increment ,
Pettype VARCHAR (10),
CONSTRAINT PRIMARY KEY (PetTypeId)

    );
SHOW TABLES ;
DESCRIBE `PetType`;



DROP TABLE IF EXISTS Pet;
CREATE TABLE IF NOT EXISTS Pet(
    PetId VARCHAR(8),
    PetAddress VARCHAR(20),
    PetOwnerId VARCHAR(9),
    PetName VARCHAR(10) NOT NULL DEFAULT 'Unknown',
    Age INTEGER (5),
    PetType VARCHAR (10),
    PetTypeId INTEGER ,
    CONSTRAINT PRIMARY KEY (PetId),
    CONSTRAINT FOREIGN KEY (PetOwnerId) REFERENCES PetOwner(PetOwnerId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (PetTypeId) REFERENCES PetType(PetTypeId) ON DELETE CASCADE ON UPDATE CASCADE
    );
SHOW TABLES ;
DESCRIBE `Pet`;





DROP TABLE IF EXISTS Appointment;
CREATE TABLE IF NOT EXISTS  Appointment(
    AppointmentId VARCHAR(9),
    PetOwnerId VARCHAR(9),
    Contact VARCHAR (15),
    Date VARCHAR (12),
    time VARCHAR(8),
    CONSTRAINT PRIMARY KEY (AppointmentId),
    CONSTRAINT FOREIGN KEY (PetOwnerId) REFERENCES PetOwner(PetOwnerId) ON DELETE CASCADE ON UPDATE CASCADE


    );
SHOW TABLES ;
DESCRIBE `Appointment`;


DROP TABLE IF EXISTS User;
CREATE TABLE IF NOT EXISTS  User(
    UserId VARCHAR(8),
    FName VARCHAR (10)NOT NULL DEFAULT 'Unknown',
    LName VARCHAR (10)NOT NULL DEFAULT 'Unknown',
    UserName VARCHAR(15),
    Password VARCHAR (15),
    Email VARCHAR(20),
    Gen VARCHAR(8),
    DOB VARCHAR (12),
    Status VARCHAR (5),
    CONSTRAINT PRIMARY KEY (UserId)

    );
SHOW TABLES ;
DESCRIBE User;


DROP TABLE IF EXISTS Doctor;
CREATE TABLE IF NOT EXISTS Doctor(
    DoctorId VARCHAR(10),
    DoctorName VARCHAR(15) NOT NULL DEFAULT 'Unknown',
    Position VARCHAR(15),
    DoctorAddress VARCHAR(25),
    DoctorSalary  DOUBLE DEFAULT 0.00,

    CONSTRAINT PRIMARY KEY (DoctorId)
    );
SHOW TABLES ;
DESCRIBE Doctor;



DROP TABLE IF EXISTS PetReport;
CREATE TABLE IF NOT EXISTS PetReport(
    PetReportId VARCHAR(9),
    PetId VARCHAR(9),
    DoctorId VARCHAR (8),
    Disease VARCHAR (15),
    Description VARCHAR (20),
    CONSTRAINT PRIMARY KEY (PetReportId),
    CONSTRAINT FOREIGN KEY (PetId) REFERENCES Pet(PetId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (DoctorId) REFERENCES Doctor(DoctorId) ON DELETE CASCADE ON UPDATE CASCADE
    );
SHOW TABLES ;
DESCRIBE PetReport;


DROP TABLE IF EXISTS Medicine;
CREATE TABLE IF NOT EXISTS  Medicine(
    MedicineId VARCHAR(9),
    Name VARCHAR(15),
    Description VARCHAR(20),
    PetId VARCHAR(5),
    Date VARCHAR (12),
    CONSTRAINT PRIMARY KEY (MedicineId),
    CONSTRAINT FOREIGN KEY (PetId) REFERENCES Pet(PetId) ON DELETE CASCADE ON UPDATE CASCADE
    );
SHOW TABLES ;
DESCRIBE  Medicine;



DROP TABLE IF EXISTS Bill;
CREATE TABLE IF NOT EXISTS Bill(
    BillId VARCHAR(9),
    Description VARCHAR(20),
    Payment  DOUBLE DEFAULT 0.00,
    PetOwnerId VARCHAR(9),
    OwnerName VARCHAR(10) NOT NULL DEFAULT 'Unknown',
    Contact VARCHAR(11),

    CONSTRAINT PRIMARY KEY ( BillId),
    CONSTRAINT FOREIGN KEY (PetOwnerId) REFERENCES PetOwner(PetOwnerId) ON DELETE CASCADE ON UPDATE CASCADE
    );
SHOW TABLES ;
DESCRIBE  Bill;


DROP TABLE IF EXISTS Stock;
CREATE TABLE IF NOT EXISTS Stock(
    StockId VARCHAR(9),
    Description VARCHAR (20),
    Price DECIMAL (6, 2),
    Qty  INT (5),
    CONSTRAINT PRIMARY KEY (StockId)
    );
SHOW TABLES ;
DESCRIBE Stock;


DROP TABLE IF EXISTS SalesRecord;
CREATE TABLE IF NOT EXISTS SalesRecord(
    SalesId VARCHAR(9),
    Description VARCHAR (20),
    SalesType VARCHAR(10),

    CONSTRAINT PRIMARY KEY (SalesId)
    );
SHOW TABLES ;
DESCRIBE SalesRecord;



DROP TABLE IF EXISTS Treatment;
CREATE TABLE IF NOT EXISTS Treatment(
    DoctorId VARCHAR (9),
    PetId VARCHAR (5),
    TreatmentName VARCHAR (10),
    TreatmentType VARCHAR (10),
    CONSTRAINT PRIMARY KEY (DoctorId,PetId),
    CONSTRAINT FOREIGN KEY (DoctorId) REFERENCES Doctor(DoctorId) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FOREIGN KEY (PetId) REFERENCES Pet(PetId) ON DELETE CASCADE ON UPDATE CASCADE

);
SHOW TABLES ;
DESCRIBE Treatment;



































